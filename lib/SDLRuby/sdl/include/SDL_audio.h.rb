module SDLRuby::SDL
  require_relative 'SDL_stdinc.h.rb'
  require_relative 'SDL_error.h.rb'
  require_relative 'SDL_endian.h.rb'
  require_relative 'SDL_rwops.h.rb'

  typealias "SDL_AudioFormat", "Uint16"
  typealias "SDL_AudioDeviceID", "Uint32"
  typealias "SDL_AudioStream", "struct _SDL_AudioStream"
  typealias "SDL_AudioStatus", "int"
  extern "int SDL_GetNumAudioDrivers(void)"
  extern "const char * SDL_GetAudioDriver(int index)"
  extern "int SDL_AudioInit(const char *driver_name)"
  extern "void SDL_AudioQuit(void)"
  extern "const char * SDL_GetCurrentAudioDriver(void)"
  extern "int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpec *obtained)"
  extern "int SDL_GetNumAudioDevices(int iscapture)"
  extern "const char * SDL_GetAudioDeviceName(int index, int iscapture)"
  extern "int SDL_GetAudioDeviceSpec(int index, int iscapture, SDL_AudioSpec *spec)"
  extern "int SDL_GetDefaultAudioInfo(char **name, SDL_AudioSpec *spec, int iscapture)"
  extern "SDL_AudioDeviceID SDL_OpenAudioDevice( const char *device, int iscapture, const SDL_AudioSpec *desired, SDL_AudioSpec *obtained, int allowed_changes)"
  extern "SDL_AudioStatus SDL_GetAudioStatus(void)"
  extern "SDL_AudioStatus SDL_GetAudioDeviceStatus(SDL_AudioDeviceID dev)"
  extern "void SDL_PauseAudio(int pause_on)"
  extern "void SDL_PauseAudioDevice(SDL_AudioDeviceID dev, int pause_on)"
  extern "SDL_AudioSpec * SDL_LoadWAV_RW(SDL_RWops *src, int freesrc, SDL_AudioSpec *spec, Uint8 **audio_buf, Uint32 *audio_len)"
  extern "void SDL_FreeWAV(Uint8 *audio_buf)"
  extern "int SDL_BuildAudioCVT(SDL_AudioCVT *cvt, SDL_AudioFormat src_format, Uint8 src_channels, int src_rate, SDL_AudioFormat dst_format, Uint8 dst_channels, int dst_rate)"
  extern "int SDL_ConvertAudio(SDL_AudioCVT *cvt)"
  extern "SDL_AudioStream * SDL_NewAudioStream(const SDL_AudioFormat src_format, const Uint8 src_channels, const int src_rate, const SDL_AudioFormat dst_format, const Uint8 dst_channels, const int dst_rate)"
  extern "int SDL_AudioStreamPut(SDL_AudioStream *stream, const void *buf, int len)"
  extern "int SDL_AudioStreamGet(SDL_AudioStream *stream, void *buf, int len)"
  extern "int SDL_AudioStreamAvailable(SDL_AudioStream *stream)"
  extern "int SDL_AudioStreamFlush(SDL_AudioStream *stream)"
  extern "void SDL_AudioStreamClear(SDL_AudioStream *stream)"
  extern "void SDL_FreeAudioStream(SDL_AudioStream *stream)"
  extern "void SDL_MixAudio(Uint8 *dst, const Uint8 *src, Uint32 len, int volume)"
  extern "void SDL_MixAudioFormat(Uint8 *dst, const Uint8 *src, SDL_AudioFormat format, Uint32 len, int volume)"
  extern "int SDL_QueueAudio(SDL_AudioDeviceID dev, const void *data, Uint32 len)"
  extern "Uint32 SDL_DequeueAudio(SDL_AudioDeviceID dev, void *data, Uint32 len)"
  extern "Uint32 SDL_GetQueuedAudioSize(SDL_AudioDeviceID dev)"
  extern "void SDL_ClearQueuedAudio(SDL_AudioDeviceID dev)"
  extern "void SDL_LockAudio(void)"
  extern "void SDL_LockAudioDevice(SDL_AudioDeviceID dev)"
  extern "void SDL_UnlockAudio(void)"
  extern "void SDL_UnlockAudioDevice(SDL_AudioDeviceID dev)"
  extern "void SDL_CloseAudio(void)"
  extern "void SDL_CloseAudioDevice(SDL_AudioDeviceID dev)"
end

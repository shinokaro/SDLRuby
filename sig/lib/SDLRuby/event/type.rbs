module SDLRuby
  class Event
    module Type
      include SDL

      QUIT_EVENT: ::Range[Integer]

      DISPLAY_EVENT: ::Range[Integer]

      WINDOW_EVENT: ::Range[Integer]

      SYSWM_EVENT: ::Range[Integer]

      KEY_EVENT: ::Range[Integer]

      EDIT_EVENT: ::Range[Integer]

      TEXT_EVENT: ::Range[Integer]

      EDIT_EXT_EVENT: ::Range[Integer]

      MOTION_EVENT: ::Range[Integer]

      BUTTON_EVENT: ::Range[Integer]

      WHEEL_EVENT: ::Range[Integer]

      JAXIS_EVENT: ::Range[Integer]

      JBALL_EVENT: ::Range[Integer]

      JHAT_EVENT: ::Range[Integer]

      JBUTTON_EVENT: ::Range[Integer]

      JDEVICE_EVENT: ::Range[Integer]

      JBATTERY_EVENT: ::Range[Integer]

      CAXIS_EVENT: ::Range[Integer]

      CBUTTON_EVENT: ::Range[Integer]

      CDEVICE_EVENT: ::Range[Integer]

      CTOUCHPAD_EVENT: ::Range[Integer]

      CSENSOR_EVENT: ::Range[Integer]

      TFINGER_EVENT: ::Range[Integer]

      DGESTURE_EVENT: ::Range[Integer]

      MGESTURE_EVENT: ::Range[Integer]

      DROP_EVENT: ::Range[Integer]

      ADEVICE_EVENT: ::Range[Integer]

      SENSOR_EVENT: ::Range[Integer]

      USER_EVENT: ::Range[Integer]

      def self.to_sym: (Integer `type`) -> Symbol
    end
  end
end
